{"name": "Merge", "description": "merge split sam files", "docker_image_name": "biodepot/umimerge", "docker_image_tag": "ubuntu_20.04__4d4b6b3f", "priority": "10", "icon": null, "inputs": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": [{"py/tuple": ["Trigger", {"callback": null, "type": {"py/type": "builtins.str"}}]}, {"py/tuple": ["inputDir", {"callback": null, "type": {"py/type": "builtins.str"}}]}, {"py/tuple": ["baseDir", {"callback": null, "type": {"py/type": "builtins.str"}}]}, {"py/tuple": ["markmultihits", {"callback": null, "type": {"py/type": "builtins.str"}}]}, {"py/tuple": ["properPairs", {"callback": null, "type": {"py/type": "builtins.str"}}]}, {"py/tuple": ["marknonrefseq", {"callback": null, "type": {"py/type": "builtins.str"}}]}, {"py/tuple": ["samegenenotmulti", {"callback": null, "type": {"py/type": "builtins.str"}}]}, {"py/tuple": ["nbins", {"callback": null, "type": {"py/type": "builtins.str"}}]}, {"py/tuple": ["binsize", {"callback": null, "type": {"py/type": "builtins.str"}}]}]}]}, "outputs": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": [{"py/tuple": ["outputDir", {"default": null, "type": {"py/type": "builtins.str"}}]}]}]}, "volumes": null, "ports": null, "parameters": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": [{"py/tuple": ["outputDir", {"flag": null, "label": "Output directory", "type": "directory"}]}, {"py/tuple": ["filter", {"flag": "-f", "label": "Merge saf files", "type": "bool"}]}, {"py/tuple": ["symfile", {"flag": null, "label": "sym2ref file", "type": "file"}]}, {"py/tuple": ["ercc", {"flag": null, "label": "ercc file", "type": "file"}]}, {"py/tuple": ["barcode", {"flag": null, "label": "barcode file", "type": "file"}]}, {"py/tuple": ["inputDir", {"flag": "-a ", "label": "aligns directory", "type": "directory"}]}, {"py/tuple": ["umicounts", {"flag": "-c ", "label": "UMI counts file", "type": "file"}]}, {"py/tuple": ["threads", {"default": 1, "flag": "-t ", "label": "Threads", "type": "int"}]}, {"py/tuple": ["sampleID", {"default": "", "flag": "-i ", "label": "Sample ID", "type": "str"}]}, {"py/tuple": ["multiwells", {"flag": "-m ", "label": "Multiple wells in directory", "type": "bool"}]}, {"py/tuple": ["nwells", {"default": 96, "flag": null, "label": "Number of wells (96 or 384)", "type": "int", "env": "NWELLS"}]}, {"py/tuple": ["baseDir", {"default": "/", "flag": null, "label": "BaseDir", "type": "directory"}]}, {"py/tuple": ["markmultihits", {"flag": "-M", "label": "Keep track of reads that map to multiple genes", "type": "bool", "env": "markmultihits"}]}, {"py/tuple": ["properPairs", {"flag": "-P", "label": "Only count reads with proper pairing (paired-end reads)", "type": "bool", "env": "properPairs"}]}, {"py/tuple": ["marknonrefseq", {"flag": "-u ", "label": "Keep track of genes not in sym2ref file", "type": "bool", "env": "markNonRefseq"}]}, {"py/tuple": ["samegenenotmulti", {"flag": "-S ", "label": "Multiple hits to same gene treated as unique hit", "type": "bool", "env": "samegenenotmulti"}]}, {"py/tuple": ["nfastqs", {"flag": "-F ", "label": "Number of fastq files (used as categories with un-multiplexed data)", "type": "int", "env": "nfastqs"}]}, {"py/tuple": ["nbins", {"default": 16, "flag": "-n  ", "label": "Number of bins to store gene position (bits)", "type": "int", "env": "nbins"}]}, {"py/tuple": ["binsize", {"default": 0, "flag": "-p ", "label": "Gene position binned (bits)", "type": "int", "env": "binsize"}]}, {"py/tuple": ["barcodesize", {"default": 6, "flag": "-B ", "label": "Barcode size (bp)", "type": "int", "env": "barcodesize"}]}, {"py/tuple": ["umisize", {"default": 10, "flag": "-U ", "label": "UMI size (bp)", "type": "int", "env": "umisize"}]}]}]}, "command": ["umimerge_parallel -s _bwb{baseDir}/_bwb{symfile} -e _bwb{baseDir}/_bwb{ercc} -b _bwb{baseDir}/_bwb{barcode} -o  _bwb{baseDir}/_bwb{outputDir} "], "autoMap": true, "runDockerMap": null, "persistentSettings": "all", "requiredParameters": ["outputDir", "inputDir", "threads", "sampleID", "baseDir"]}