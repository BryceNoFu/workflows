{"name": "HISAT2_Align", "description": "HISAT2 FASTQ Alignment", "docker_image_name": "biodepot/hisat2", "docker_image_tag": "latest", "priority": "10", "icon": null, "inputs": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": [{"py/tuple": ["Trigger", {"callback": null, "type": {"py/type": "builtins.str"}}]}, {"py/tuple": ["mate_1", {"callback": null, "type": {"py/type": "builtins.str"}}]}, {"py/tuple": ["mate_2", {"callback": null, "type": {"py/type": "builtins.str"}}]}, {"py/tuple": ["sam_output", {"callback": null, "type": {"py/type": "builtins.str"}}]}, {"py/tuple": ["hisat2_idx", {"callback": null, "type": {"py/type": "builtins.str"}}]}]}]}, "outputs": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": [{"py/tuple": ["sam_output", {"default": null, "type": {"py/type": "builtins.str"}}]}]}]}, "volumes": null, "ports": null, "parameters": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": [{"py/tuple": ["hisat2_idx", {"flag": "-x ", "label": "Index basename", "type": "str"}]}, {"py/tuple": ["mate_1", {"flag": null, "label": "FASTQ mate 1 files", "type": "file list", "env": "mate1"}]}, {"py/tuple": ["mate_2", {"flag": null, "label": "FASTQ mate 2 files", "type": "file list", "env": "mate2"}]}, {"py/tuple": ["sam_output", {"flag": "-S ", "label": "SAM file output", "type": "file list"}]}, {"py/tuple": ["unpaired", {"flag": null, "label": "Unpaired reads FASTQ files", "type": "file list", "env": "unpaired"}]}, {"py/tuple": ["sraids", {"flag": "--sra-acc ", "label": "SRA IDs", "type": "text list", "env": "sraids"}]}, {"py/tuple": ["nthreads", {"flag": "-p ", "label": "nthreads", "type": "int"}]}, {"py/tuple": ["upto", {"flag": "--upto ", "label": "Align up to first number of reads", "type": "int"}]}, {"py/tuple": ["skip", {"flag": "--skip ", "label": "Skip first number of reads", "type": "int"}]}, {"py/tuple": ["trim5", {"flag": "--trim5 ", "label": "Trim number of 5' end bases", "type": "int"}]}, {"py/tuple": ["trim3", {"flag": "--trim3 ", "label": "Trim number of 3' end bases", "type": "int"}]}, {"py/tuple": ["phred33", {"flag": "--phred33 ", "label": "Phred quality plus 33 encoding", "type": "bool"}]}, {"py/tuple": ["phred64", {"flag": "--phred64 ", "label": "Phred quality plus 64 encoding", "type": "bool"}]}, {"py/tuple": ["solexa_quals", {"flag": "--solexa-quals ", "label": "Convert input qualities from Solexa to Phred", "type": "bool"}]}, {"py/tuple": ["int_quals", {"flag": "--int_quals ", "label": "Quality values as space-separated ASCII integers", "type": "bool"}]}, {"py/tuple": ["ignore_quals", {"flag": "--ignore-quals ", "label": "Ignore quals, treat inputs as high quality", "type": "bool"}]}, {"py/tuple": ["nofw", {"flag": "--nofw ", "label": "Do not align unpaired reads to forward reference strand", "type": "bool"}]}, {"py/tuple": ["norc", {"flag": "--norc ", "label": "Do not align unpaired reads to reverse reference strand", "type": "bool"}]}, {"py/tuple": ["spliced_options", {"flag": null, "argument": true, "label": "Spliced alignment options (list flags and inputs here)", "type": "str"}]}, {"py/tuple": ["reporting_options", {"flag": null, "argument": true, "label": "Reporting options (list flags and inputs here)", "type": "str"}]}, {"py/tuple": ["pairedend_options", {"flag": null, "argument": true, "label": "Pared-end alignment options (list flags and inputs here)", "type": "str"}]}, {"py/tuple": ["time", {"flag": "--time ", "label": "Print wall-clock time", "type": "bool"}]}, {"py/tuple": ["output_options", {"flag": null, "argument": true, "label": "Output options (list flags and inputs here)", "type": "str"}]}, {"py/tuple": ["sam_options", {"flag": null, "argument": true, "label": "SAM options (list flags and inputs here)", "type": "str"}]}, {"py/tuple": ["offrate", {"flag": "--offrate ", "label": "offrate", "type": "int"}]}, {"py/tuple": ["reorder", {"flag": "--reorder ", "label": "output SAM printed in order of reads in original input", "type": "bool"}]}, {"py/tuple": ["qcfilter", {"flag": "--qc-filter ", "label": "Filter out reads for which QSEQ filter is non-zero", "type": "bool"}]}]}]}, "command": ["./runHisat.sh "], "autoMap": true, "runDockerMap": null, "nextFlowMap": null, "persistentSettings": "all", "requiredParameters": ["hisat2_idx", "sam_output"]}